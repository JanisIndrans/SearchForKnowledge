@using SearchForKnowledge.ViewModels
@model SearchForKnowledge.ViewModels.PostsDisplay
@{
    ViewBag.Title = "SearchPosts";
}
<div>
    <h2 id="recent">
        Results for: @if (Model.SearchString.Length > 26)
                    {
                        @Model.SearchString.Substring(0,24)@:...

                    }
                    else
                    {
                        @Model.SearchString
                    }
    </h2>
    <div id="error">
        @Model.ErrorMessage<strong>@Model.SearchString</strong>
    </div>
    @Html.Partial("_DisplayPosts", Model.PostsToDisplay)
    <br/>
    <div class="btn-group pull-right">

        @if (Model.Posts.HasPreviousPage)
        {
            <a href="@Url.Action("SearchPosts", new {page = Model.Posts.PreviousPage, searchString = Model.SearchString})" class="btn btn-primary btn-sm">
                <i class="glyphicon glyphicon-chevron-left"></i>Previous Page
            </a>
        }
        else
        {
            <a class="btn btn-default btn-disabled btn-sm">
                <i class="glyphicon glyphicon-chevron-left"></i>Previous Page
            </a>
        }
        @if (Model.Posts.HasNextPage)
        {
            <a href="@Url.Action("SearchPosts", new { page = Model.Posts.NextPage, searchString = Model.SearchString })" class="btn btn-primary btn-sm">
                Next Page<i class="glyphicon glyphicon-chevron-right"></i>
            </a>
        }
        else
        {
            <a class="btn btn-default btn-disabled btn-sm">
                Next Page<i class="glyphicon glyphicon-chevron-right"></i>
            </a>
        }

    </div>

</div>